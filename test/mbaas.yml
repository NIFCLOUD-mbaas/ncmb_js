# core_test
-
  request:
    url: /2013-09-01/classes/TestClass
    method: GET
  response:
    status: 200
    file: 2013-09-01_classes_TestClass_get_success.json
-
  request:
    url: /2013-09-01/classes/TestClass
    method: POST
    body:
      "key": "value"
  response:
    status: 201
    file: 2013-09-01_classes_TestClass_post_success.json
-
  request:
    url: /2013-09-01/classes/TestClass/object_id
    method: PUT
    body:
      "key": "value_new"
  response:
    status: 200
    file: 2013-09-01_classes_TestClass_put_success.json
-
  request:
    url: /2013-09-01/classes/TestClass/object_id
    method: DELETE
  response:
    status: 200
    file: 2013-09-01_classes_TestClass_delete_success.json

# datastore

-
  request:
    url: /2013-09-01/classes/food
    method: POST
    data:
      name: "orange"
      acl: {'*':{read: true}}
  response:
    status: 201
    file: 2013-09-01_classes_food_post_acl_success.json
-
  request:
    url: /2013-09-01/classes/food
    method: GET
    query:
      where: '{"objectId":"date_object_id"}'
  response:
    status: 200
    file: 2013-09-01_classes_food_get_date_success.json
-
  request:
    url: /2013-09-01/classes/food
    method: POST
    data:
      harvestDate: {"__type":"Date","iso":"1999-12-31T14:59:59.999Z"}
  response:
    status: 201
    file: 2013-09-01_classes_food_post_date_success.json
-
  request:
    url: /2013-09-01/classes/food
    method: POST
    data:
      geoLocation: { latitude: 12, longitude: 133, __type: 'GeoPoint' }
  response:
    status: 201
    file: 2013-09-01_classes_food_post_geolocation_success.json
# -
#   request:
#     url: /2013-09-01/classes/food
#     method: POST
#     data:
#       status: success
#   response:
#     status: 201
#     file: 2013-09-01_classes_food_post_success.json
-
  request:
    url: /2013-09-01/classes/food
    method: GET
    query:
      where: '{"objectId":"geolocation_object_id"}'
  response:
    status: 200
    file: 2013-09-01_classes_food_get_geolocation_success.json
-
  request:
    url: /2013-09-01/classes/nonexist
    method: POST
    data:
      status: failure
  response:
    status: 400
    file: 2013-09-01_classes_nonexist_post_failure.json
-
  request:
    url: /2013-09-01/classes/nonexist
    method: GET
  response:
    status: 200
    file: 2013-09-01_classes_nonexist_get_success.json
-
  request:
    url: /2013-09-01/classes/fetchlist
    method: GET
  response:
    status: 200
    file: 2013-09-01_classes_fetchlist_get_success.json
-
  request:
    url: /2013-09-01/batch
    method: POST
    body:
      requests: [{"method":"POST","path":"2013-09-01/classes/food","body":{"key":"value1"}},{"method":"POST","path":"2013-09-01/classes/food","body":{"key":"value2"}}]
  response:
    status: 201
    file: 2013-09-01_classes_TestClass_batch_success.json

-
  request:
    url: /2013-09-01/batch
    method: POST
    body:
      requests: [{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value0"}},{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value1"}},{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value2"}},{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value3"}},{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value4"}},{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value5"}},{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value6"}},{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value7"}},{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value8"}},{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value9"}},{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value10"}},{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value11"}},{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value12"}},{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value13"}},{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value14"}},{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value15"}},{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value16"}},{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value17"}},{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value18"}},{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value19"}},{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value20"}},{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value21"}},{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value22"}},{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value23"}},{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value24"}},{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value25"}},{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value26"}},{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value27"}},{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value28"}},{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value29"}},{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value30"}},{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value31"}},{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value32"}},{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value33"}},{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value34"}},{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value35"}},{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value36"}},{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value37"}},{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value38"}},{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value39"}},{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value40"}},{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value41"}},{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value42"}},{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value43"}},{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value44"}},{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value45"}},{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value46"}},{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value47"}},{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value48"}},{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value49"}}]
  response:
    status: 201
    file: 2013-09-01_classes_TestClass_batch_50requests_success.json
-
  request:
    url: /2013-09-01/batch
    method: POST
    body:
      requests: [{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value50"}},{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value51"}},{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value52"}},{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value53"}},{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value54"}},{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value55"}},{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value56"}},{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value57"}},{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value58"}},{"method":"POST","path":"2013-09-01/classes/megafood","body":{"key":"value59"}}]
  response:
    status: 201
    file: 2013-09-01_classes_TestClass_batch_10requests_success.json

-
  request:
    url: /2013-09-01/classes/food
    method: GET
    query:
      where: '{"objectId":"acl_object_id"}'
  response:
    status: 200
    file: 2013-09-01_classes_food_get_acl_success.json
-
  request:
    url: /2013-09-01/classes/food/object_id
    method: GET
  response:
    status: 200
    file: 2013-09-01_classes_TestClass_fetch_success.json
-
  request:
    url: /2013-09-01/classes/food
    method: GET
    query:
      where: '{"objectId":"object_id"}'
  response:
    status: 200
    file: 2013-09-01_classes_food_get_success.json
-
  request:
    url: /2013-09-01/classes/food
    method: GET
    query:
      limit: 1
  response:
    status: 200
    file: 2013-09-01_classes_food_get_success.json
-
  request:
    url: /2013-09-01/classes/food/object_id
    method: PUT
    body:
      "key": "value_new"
  response:
    status: 200
    file: 2013-09-01_classes_TestClass_put_success.json

-
  request:
    url: /2013-09-01/classes/food/object_id
    method: DELETE
  response:
    status: 200
    file: 2013-09-01_classes_TestClass_delete_success.json

# push
-
  request:
    url: /2013-09-01/push
    method: POST
  response:
    status: 201
    body: '{"createDate":"2015-04-15T04:57:36.432Z","objectId":"pNiIhMIWZ3NYs5Zi"}'
-
  request:
    url: /2013-09-01/classes/TestClass
    method: GET
  response:
    status: 200
    file: 2013-09-01_classes_TestClass_get_success.json

# users/:user
-
  request:
    url: /api/0.0/users/exists_user
    method: GET
  response:
    status: 200
    file: exists_user.json

-
  request:
    url: /api/0.0/users/non_exists_user
    method: GET
  response:
    status: 404
    file: non_exists_user.json

-
  request:
    url: '/2013-09-01/login'
    method: GET
    query:
      userName: name
      password: passwd
  response:
    status: 200
    file: 2013-09-01_user_login_namepw_success.json

-
  request:
    url: /2013-09-01/requestPasswordReset
    method: POST
    body: { "mailAddress": "test@example.com" }
  response:
    status: 201
    file: 2013-09-01_users_send_reset_password_success.json

-
  request:
    url: /2013-09-01/users
    method: POST
    body: 
      authData:
        anonymous: 
          id: "3dc72085-911b-4798-9707-d69e879a6185"
  response:
    status: 200
    file: 2013-09-01_users_login_as_anonymous_success.json
-
  request:
    url: /2013-09-01/users/objectid
    method: PUT
    body: {"updatefield": "updated"}
  response:
    status: 201
    file: 2013-09-01_users_update_success.json

# files
-
  request:
    url: /2013-09-01/files/del_file.text
    method: DELETE
  response:
    status: 200
    body: '{}'

-
  request:
    url: /2013-09-01/users/object_id
    method: DELETE
  response:
    status: 200
    body: '{}'

-
  request:
    url: /2013-09-01/files/fetch_file.text
    method: GET
  response:
    status: 200
    file: 2013-09-01_file_fetch_success.json

-
  request:
    url: /2013-09-01/files/update_file.text
    method: PUT
    body: { acl: { abc: { write: true } } }
  response:
    status: 200
    file: 2013-09-01_file_update_acl_success.json
# roles
-
  request:
    url: /2013-09-01/roles/update_role_id
    method: PUT
    body:
      "roleName": "updated_role_name"
  response:
    status: 200
    file: 2013-09-01_role_put_success.json
-
  request:
    url: /2013-09-01/roles/no_exist_role_id
    method: PUT
    body:
      "roleName": "updated_role_name"
  response:
    status: 404
    file: 2013-09-01_no_exist_role_put_failed.json
-
  request:
    url: /2013-09-01/roles/delete_role_id
    method: DELETE
  response:
    status: 200
    body: '{}'
-
  request:
    url: /2013-09-01/roles/no_exist_role_id
    method: DELETE
  response:
    status: 404
    body: '{"code":"E404001","error":"No data available."}'

-
  request:
    url: /2013-09-01/roles
    method: POST
    body: {"roleName": "new_role_name"}
  response:
    status: 201
    file: 2013-09-01_role_post_success.json
-
  request:
    url: /2013-09-01/roles
    method: POST
    body: {"roleName": "new_exist_role_name"}
  response:
    status: 409
    file: 2013-09-01_classes_exist_role_failure.json
